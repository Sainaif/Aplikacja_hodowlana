<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>